(self.webpackChunkSBSpike=self.webpackChunkSBSpike||[]).push([[560],{"./components/Button/Button.tsx":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("./node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(exports,"__esModule",{value:!0}),exports.MyButton=void 0;_interopRequireDefault(__webpack_require__("./node_modules/react/index.js"));var _StyleSheet=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/StyleSheet/index.js")),_Text=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/Text/index.js")),_TouchableOpacity=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/TouchableOpacity/index.js")),_View=_interopRequireDefault(__webpack_require__("./node_modules/react-native-web/dist/exports/View/index.js")),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js"),styles=_StyleSheet.default.create({button:{paddingVertical:8,paddingHorizontal:16,borderRadius:4,alignSelf:"flex-start",flexGrow:0,backgroundColor:"purple"},buttonText:{color:"white",fontSize:16,fontWeight:"bold"},buttonContainer:{alignItems:"flex-start",flex:1}}),MyButton=exports.MyButton=function MyButton(_ref){var text=_ref.text,onPress=_ref.onPress,color=_ref.color,textColor=_ref.textColor;return(0,_jsxRuntime.jsx)(_View.default,{style:styles.buttonContainer,children:(0,_jsxRuntime.jsx)(_TouchableOpacity.default,{style:[styles.button,!!color&&{backgroundColor:color}],onPress,activeOpacity:.8,children:(0,_jsxRuntime.jsx)(_Text.default,{style:[styles.buttonText,!!textColor&&{color:textColor}],children:text})})})};try{MyButton.displayName="MyButton",MyButton.__docgenInfo={description:"",displayName:"MyButton",props:{onPress:{defaultValue:null,description:"",name:"onPress",required:!0,type:{name:"() => void",raw:null,value:null}},text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string",raw:null,value:null}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string",raw:null,value:null}},textColor:{defaultValue:null,description:"",name:"textColor",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{MyButton.displayName="MyButton",MyButton.__docgenInfo={description:"",displayName:"MyButton",props:{onPress:{defaultValue:null,description:"",name:"onPress",required:!0,type:{name:"() => void",raw:null,value:null}},text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string",raw:null,value:null}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string",raw:null,value:null}},textColor:{defaultValue:null,description:"",name:"textColor",required:!1,type:{name:"string",raw:null,value:null}}}}}catch(e){}try{MyButton.displayName="MyButton",MyButton.__docgenInfo={description:"",displayName:"MyButton",props:{onPress:{defaultValue:null,description:"",name:"onPress",required:!0,type:{name:"() => void"}},text:{defaultValue:null,description:"",name:"text",required:!0,type:{name:"string"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"string"}},textColor:{defaultValue:null,description:"",name:"textColor",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["components/Button/Button.tsx#MyButton"]={docgenInfo:MyButton.__docgenInfo,name:"MyButton",path:"components/Button/Button.tsx#MyButton"})}catch(__react_docgen_typescript_loader_error){}}}]);